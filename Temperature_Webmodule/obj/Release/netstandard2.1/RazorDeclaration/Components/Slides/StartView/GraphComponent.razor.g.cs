#pragma checksum "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\Components\Slides\StartView\GraphComponent.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ee0898252b7472906f0334681eb76fba787d416b"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TemperatureModule.Webpage.Components.Slides.StartView.Graph
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\_Imports.razor"
using Temperature_Webmodule;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\_Imports.razor"
using TemperatureModule.Webpage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\_Imports.razor"
using TemperatureModule.Webpage.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\_Imports.razor"
using ChartJs.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\Components\Slides\StartView\GraphComponent.razor"
using ChartJs.Blazor.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\Components\Slides\StartView\GraphComponent.razor"
using ChartJs.Blazor.ChartJS.Common.Enums;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\Components\Slides\StartView\GraphComponent.razor"
using ChartJs.Blazor.ChartJS.LineChart;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\Components\Slides\StartView\GraphComponent.razor"
using ChartJs.Blazor.ChartJS.Common.Axes;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\Components\Slides\StartView\GraphComponent.razor"
using ChartJs.Blazor.ChartJS.Common.Time;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\Components\Slides\StartView\GraphComponent.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\Components\Slides\StartView\GraphComponent.razor"
using TemperatureModule.Webpage.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\Components\Slides\StartView\GraphComponent.razor"
using System.Diagnostics;

#line default
#line hidden
#nullable disable
    public partial class GraphComponent : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 18 "C:\Users\lukse\source\repos\TempraturModul\Temperature_Webmodule\Components\Slides\StartView\GraphComponent.razor"
       
    [CascadingParameter]
    public UnitData[] unitData { get; set; }

    private LineConfig _lineChartConfig;
    private ChartJsLineChart _lineChartJs;

    protected override void OnInitialized()
    {
        _lineChartConfig = new LineConfig()
        {
            Options = new ChartJs.Blazor.ChartJS.LineChart.LineOptions()
            {
                MaintainAspectRatio = false,
                Responsive = true,
                Legend = new ChartJs.Blazor.ChartJS.Common.Handlers.Legend
                {
                    Display = true
                },
                Scales = new Scales
                {
                    xAxes = new List<CartesianAxis>
    {
                        new TimeAxis
                        {
                            ScaleLabel = new ScaleLabel
                            {
                                LabelString = "Time"
                            },
                            Position = Position.Bottom,
                            Time = new ChartJs.Blazor.ChartJS.Common.Time.TimeOptions
                            {
                                DisplayFormats = ChartJs.Blazor.ChartJS.Common.Time.TimeDisplayFormats.DE_CH
    }
                        }
                    },
                    yAxes = new List<CartesianAxis>
        {
                        new LinearCartesianAxis
                        {
                            ScaleLabel = new ScaleLabel
                            {
                                LabelString = "Temp. Â°C"
                            },
                            Ticks = new ChartJs.Blazor.ChartJS.Common.Axes.Ticks.LinearCartesianTicks
                            {
                                SuggestedMin = 0,
                                SuggestedMax = 45

                            }

                        }
                    }
                }
            }
        };
    }

    protected override void OnParametersSet()
    {
        _lineChartConfig.Data.Datasets.Clear();

        var airTempratureDataset = new LineDataset<TimeTuple<double>>()
        {
            BackgroundColor = "#f3ff00",
            BorderColor = "#f3ff00",
            BorderWidth = 2,
            Fill = false,
            PointRadius = 4,
            ShowLine = true,
            Label = "Air temperature"
        };

        var waterTempratureDataset = new LineDataset<ChartJs.Blazor.ChartJS.Common.Time.TimeTuple<double>>()
        {
            BackgroundColor = "#1a5fff",
            BorderColor = "#1a5fff",
            BorderWidth = 2,
            Fill = false,
            PointRadius = 4,
            ShowLine = true,
            Label = "Water temperature"
        };

        if (unitData != null)
        {
            foreach (var dataPoint in unitData)
            {
                if (dataPoint.PTIndex == 0)
                {
                    airTempratureDataset.Add(new TimeTuple<double>(
                        new Moment(dataPoint.DataDateTime), dataPoint.DataPTValue));
                }
                else if (dataPoint.PTIndex == 1)
                {
                    waterTempratureDataset.Add(new TimeTuple<double>(
                        new Moment(dataPoint.DataDateTime), dataPoint.DataPTValue));
                }
            }

            Debug.WriteLine("Adding {0} air tempratures to the graph", airTempratureDataset.Data.Count);
            _lineChartConfig.Data.Datasets.Add(airTempratureDataset);
            Debug.WriteLine("Adding {0} water tempratures to the graph", airTempratureDataset.Data.Count);
            _lineChartConfig.Data.Datasets.Add(waterTempratureDataset);

        }
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
